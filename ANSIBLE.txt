### Playbook vs. Role ###
https://stackoverflow.com/questions/32101001/ansible-playbooks-vs-roles?rq=1

* [databases] is a single name for a group of hosts. It allows you to 
  reference multiple hosts by a single name.
* Role is a set of tasks and additional files to configure host to serve 
  for a certain role.
* Playbook is a mapping between a group of hosts and roles.

### ssh public key in order of precedence for 'vars' ###
https://stackoverflow.com/questions/44734179/specifying-ssh-key-in-ansible-playbook-file?rq=1
https://stackoverflow.com/questions/26641070/how-do-ansible-host-vars-work

Vars set on the command line -e foo=set_on_cmd_line
Vars set in the vars_files: block in the play
Vars set in the vars: block in the play
Vars set in host_vars/
Vars set in group_vars/
Role default vars roles/.../defaults/main.yml

for instances:
```
* in the inventory file:
  myHost ansible_ssh_private_key_file=~/.ssh/mykey1.pem
  myOtherHost ansible_ssh_private_key_file=~/.ssh/mykey2.pem

* in the host_vars:
  # host_vars/myHost.yml
  ansible_ssh_private_key_file: ~/.ssh/mykey1.pem
  # host_vars/myOtherHost.yml
  ansible_ssh_private_key_file: ~/.ssh/mykey2.pem

* in a group_vars file if you use the same key for a group of hosts
  # host_vars/myHost.yml
  ansible_ssh_private_key_file: ~/.ssh/mykey1.pem
  # host_vars/myOtherHost.yml
  ansible_ssh_private_key_file: ~/.ssh/mykey2.pem

* in the vars section of your play:

  - hosts: myHost
    remote_user: ubuntu
    vars_files:
      - vars.yml
    vars:
      ansible_ssh_private_key_file: "{{ key1 }}"
    tasks:
      - name: Echo a hello message
        command: echo hello
```

### Plugin Types ###

httpapi
inventory
lookup
netconf
shell
strategy
vars

### Inventory ####

+ /etc/ansible/hosts Default inventory file
+ parameter ansible-playbook -i host.txt -i groups.txt
+ inventory usually in INI or YAML format
+ All hosts belong to 'all' group
+ 'Ungrouped' hosts belong to the 'ungrouped' group
+ All hosts will belong to at least 2 groups: 'all' and 'ungrouped'
+ Nested inventory

seattle:
  web1.local.net
  web2.local.net
sanfrancisco:
  web3.local.net
  db2.local.net
prod:
  children:
    sanfrancisco:
test:
  children:
    seattle:

+ Using Numeric Ranges

all:
  hosts:
    mail1.local.net
  children:
    webservers:
      hosts:
        web[1:3].local.net:

+ ansible-playbook deploy.yml -i staging -i production
+ Ansible Dynamic Inventory Plugins or Scripts

### Configuration Source ###

ansible.cfg
Environment Variables
Command line options
Playbook keywords
Ansible variables
Locations:
 - Location in $ANSIBLE_CONFIG
 - ./ansible.cfg
 - ~/ansible.cfg
 - /etc/ansible/ansible.cfg
Configuration Data Priority
 - Variables:
   vars: -e 'ansible_user=ansible'
 - Environment Variables
 - Command line options
 - Playbook keywords

### Parallelization ###

# Ansible Ad-hoc with parallelization 2 and ask for password when access with 'bigchoo' user.
ansible all -b -i inventory -m apt -a "name=chrony state=present" -f 2 -u bigchoo --become --ask-become-pass

### Asynchronous tasks ###

# https://stackoverflow.com/questions/56157364/ansible-task-with-async-and-become-giving-job-not-found-error
# https://medium.com/@knoldus/ansible-asynchronous-actions-and-polling-9e8ede5c3032

sudo visudo to allow become to root for /tmp/hello.sh execution

cat <<- ECHO | tee /tmp/hello.sh
#!/bin/bash

echo "Beginning of task"
x=1; while [ $x -le 3 ]; do echo "In progressing and waiting for " $(( x++ )) " seconds"; sleep $x; done
maxdelay=5; delay=$(($RANDOM%maxdelay)); echo "In progress and wait randomly for $delay"; sleep $delay
echo "End of task"
ECHO

ansible-playbook ansible-async-task.yml

### Patterns ###

Pattern: webservers:dbservers - Using match from group 'webservers' or 'dbservers'
Pattern: webservers:!dbservers - Using match from group 'webservers' and exclude items in 'dbservers'
Pattern: webservers:&dbservers - Using match from group 'webservers' and 'dbservers'
Pattern: 192.168.\* or \*.local.net
Pattern: ~(web|db).*\.local\.net

ansible dev-b0* -b -i inventory -m file -a "path=/tmp/file.txt state=touch mode=644" -f 2 -u bigchoo -b -K
ansible dev-b0* -b -i inventory -m copy -a "dest=/tmp/file.txt content='stuff' force=no mode=644" -f 2 -u bigchoo -b -K

### Modules ###
 - touch
 - file
 - copy
 - yum
   -m yum -a "name=* state=latest" -b -K                         |  yum update -y
   -m yum -a "name='@Development tools' state=installed" -b -K   |  yum group install
   -m yum -a "list=installed"                                    |  yum list installed
 - Module Index
 - service
   -m service -a "name=httpd enabled=yes" --check
 - shell
   -m shell -a "systemctl status chronyd"
 - user
   > doveadm pw -s SHA512-CRYPT -p pass
   {SHA512-CRYPT}$6$w.S0AQzFoMU7.WlH$M7XAc89kP1uHCEUezDsR0aQIXC3t3vvqkQl2YKQ6WKvetnkxfoyw2zN1t/oNTbpEhOa4iZoLHrX584ueVp9ks1
   -m user -a 'name=dummy state=present home=/apps/dummy shell=/bin/sh password=$6$w.S0AQzFoMU7.WlH$M7XAc89kP1uHCEUezDsR0aQIXC3t3vvqkQl2YKQ6WKvetnkxfoyw2zN1t/oNTbpEhOa4iZoLHrX584ueVp9ks1' -b -K
   -m user -a 'name=dummy state=absent group=wheel' -b -K
 - setup
   -m setup -a 'gather_subset=!all,!min,hardware filter=ansible_mounts'

### Connection ###

 - Disable Host Key Checking
   [defaults]
   host_key_checking = False  
 
 - local
 - docker
 - kubectl
 - vmware_tools
 - ansible-doc -t connection <plugin name>

### Ansible-Config ###

 > ansible-config dump --only-changed

### Ansible-Console ###

 > ansible-console dev-b* -i inventory -a -b -K

bigchoo@dev-b* (4)[f:5]# shell hostname
dev-b02.k8s.loc | CHANGED | rc=0 >>
dev-b02
dev-b01.k8s.loc | CHANGED | rc=0 >>
dev-b01
dev-b99.k8s.loc | CHANGED | rc=0 >>
dev-b99
dev-b03.k8s.loc | CHANGED | rc=0 >>
dev-b03

### Ansible-Inventory ###

 > ansible-inventory -i inventory --list --output inventory.json

 > ansible-inventory -i inventory --graph
@all:
  |--@devops:
  |  |--dev-s01.k8s.loc
  |--@masters:
  |  |--dev-b01.k8s.loc
  |--@multi:
  |  |--@devops:
  |  |  |--dev-s01.k8s.loc
  |  |--@masters:
  |  |  |--dev-b01.k8s.loc
  |  |--@workers:
  |  |  |--dev-b02.k8s.loc
  |  |  |--dev-b03.k8s.loc
  |--@nfs:
  |  |--dev-b99.k8s.loc
  |--@ungrouped:
  |--@workers:
  |  |--dev-b02.k8s.loc
  |  |--dev-b03.k8s.loc
